name: CI
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'
        id: setup-java

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10'
          cache: true
        id: setup-flutter

      - name: Cache Pub dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-cache-

      - name: Get dependencies
        run: flutter pub get

      - name: Set up Firebase service account
        run: echo "${{ secrets.SERVICE_CREDENTIALS_FILE_CONTENT }}" > service-account.json


      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Set up google-services.json
        run: echo "${{ secrets.GOOGLE_SERVICES_JSON_CONTENT }}" > app/google-services.json
        
      - name: Build
        run: flutter build apk --release -t "lib/main_dev.dart" --flavor dev --build-name=1.0.${{ github.run_number }} --build-number=${{ github.run_number }}
        id: build

      - name: Cache Firebase Distribution
        uses: actions/cache@v3
        with:
          path: ~/.cache/firebase
          key: ${{ runner.os }}-firebase-${{ hashFiles('**/firebase.json') }}
          restore-keys: |
            ${{ runner.os }}-firebase-

      - name: Upload artifact to Firebase App Distribution
        run: |
          firebase appdistribution:distribute "build/app/outputs/flutter-apk/app-dev-release.apk" --app ${{ secrets.FIREBASE_APP_ID_ANDROID }} --groups internal_testers --release-notes "Version ${{ github.run_number }}"
        env:
          FIREBASE_APP_ID_ANDROID: ${{ secrets.FIREBASE_APP_ID_ANDROID }}
